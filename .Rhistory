ểu đ
ồ c
ột
ggplot(mean_mpg_by_cyl, aes(x = factor(cyl), y = mean_mpg)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Giá tr
ị trung bình c
ủa MPG theo s
ố xi-lanh (Cyl)",
x = "S
ố xi-lanh (Cyl)",
y = "MPG trung bình") +
theme_minimal()
# Tính giá tr
ị trung bình c
ủa mpg theo cyl
mean_mpg_by_cyl <- mtcars %>%
group_by(cyl) %>%
summarise(mean_mpg = mean(mpg))
install.packages("modeldata")
library(sparklyr)
library(dplyr)
library(modeldata)
sc <- spark_connect(master = "local")
master = "local":
data(mlc_churn)
churn_tbl <- copy_to(sc, mlc_churn, "churn", overwrite = TRUE)
glimpse(churn_tbl)
churn_tbl <- churn_tbl %>%
select(-state,-area_code)
churn_tbl <- churn_tbl %>%
mutate(churn = ifelse(churn == "Yes", 1, 0))
churn_tbl <- churn_tbl %>%
mutate(international_plan = ifelse(international_plan == "Yes", 1, 0))
churn_tbl <- churn_tbl %>%
mutate(voice_mail_plan = ifelse(voice_mail_plan == "Yes", 1, 0))
partitions <- churn_tbl %>%
sdf_random_split(training = 0.8, test = 0.2, seed = 123)
train_tbl <- partitions$training
test_tbl <- partitions$test
train_tbl %>%summarise(count= n())%>% collect()
test_tbl%>% summarise(count= n()) %>%collect()
dt_model<-train_tbl%>%
ml_decision_tree(churn ~., type= "classification", seed= 123)
dt_model
dt_predictions <-ml_predict(dt_model,test_tbl)
dt_metrics<-ml_multiclass_classification_evaluator(
dt_predictions,
label_col= "churn",
prediction_col= "prediction",
metric_name= "accuracy"
)
print(paste("DecisionTreeAccuracy:",dt_metrics))
class_counts <-train_tbl %>%
group_by(churn) %>%
summarise(count= n()) %>%
collect()
minority_class <-class_counts %>% filter(count ==min(count))%>% pull(churn)
majority_class <-class_counts %>% filter(count ==max(count))%>% pull(churn)
minority_samples <-train_tbl %>%filter(churn ==minority_class)
balanced_train_tbl <-train_tbl %>%
filter(churn == majority_class) %>%
sdf_bind_rows(minority_samples %>% sdf_sample(fraction = 2, replacement = TRUE))
balanced_train_tbl %>%
group_by(churn) %>%
summarise(count = n()) %>%
collect()
# Cài đ
ặt các gói c
ần thi
ết
install.packages("caret")
install.packages("DMwR")
install.packages("randomForest")
library(caret)
# Cài đ
ặt thư vi
ện n
ếu chưa có
install.packages("tidyverse")
# T
ải thư vi
ện
library(tidyverse)
# Đ
ặt seed đ
ể tái t
ạo k
ết qu
ả
set.seed(123)
# S
ố lư
ợng dòng d
ữ li
ệu
n <- 100000
# T
ạo d
ữ li
ệu gi
ả l
ập
crime_data <- data.frame(
Crime_ID = 1:n,
Crime_Type = sample(c("Tr
ộm c
ắp", "B
ạo l
ực", "L
ừa đ
ảo", "Ma túy", "Gi
ết ngư
ời"),
n, replace = TRUE, prob = c(0.4, 0.25, 0.15, 0.15, 0.05)),
Location = sample(c("Hà N
ội", "TP.HCM", "Đà N
ẵng", "H
ải Phòng", "C
ần Thơ"), n, replace = TRUE),
Time = sample(0:23, n, replace = TRUE),
Month = sample(1:12, n, replace = TRUE),
Year = sample(2015:2025, n, replace = TRUE),
Age = sample(18:70, n, replace = TRUE),
Outcome = sample(c("B
ắt gi
ữ", "Chưa b
ắt", "Đang đi
ều tra"),
n, replace = TRUE, prob = c(0.5, 0.3, 0.2))
)
# Xu
ất d
ữ li
ệu ra file CSV
write.csv(crime_data, "crime_data.csv", row.names = FALSE)
library(tidyverse)
# Đ
ặt seed đ
ể tái t
ạo k
ết qu
ả
set.seed(123)
# S
ố lư
ợng dòng d
ữ li
ệu
n <- 100000
# T
ạo d
ữ li
ệu gi
ả l
ập
crime_data <- data.frame(
Crime_ID = 1:n,
Crime_Type = sample(c("Tr
ộm c
ắp", "B
ạo l
ực", "L
ừa đ
ảo", "Ma túy", "Gi
ết ngư
ời"),
n, replace = TRUE, prob = c(0.4, 0.25, 0.15, 0.15, 0.05)),
Location = sample(c("Hà N
ội", "TP.HCM", "Đà N
ẵng", "H
ải Phòng", "C
ần Thơ"), n, replace = TRUE),
Time = sample(0:23, n, replace = TRUE),
Month = sample(1:12, n, replace = TRUE),
Year = sample(2015:2025, n, replace = TRUE),
Age = sample(18:70, n, replace = TRUE),
Outcome = sample(c("B
ắt gi
ữ", "Chưa b
ắt", "Đang đi
ều tra"),
n, replace = TRUE, prob = c(0.5, 0.3, 0.2))
)
# Xu
ất d
ữ li
ệu ra file CSV
write.csv(crime_data, "crime_data.csv", row.names = FALSE)
# Ki
ểm tra m
ột s
ố dòng d
ữ li
ệu
head(crime_data)
# Thông báo hoàn thành
cat("File 'crime_data.csv' đã đư
ợc t
ạo thành công!\n")
# Cài đ
ặt thư vi
ện n
ếu chưa có
install.packages(c("tidyverse", "ggplot2"))
# T
ải thư vi
ện
library(tidyverse)
library(ggplot2)
# Đ
ặt seed đ
ể tái t
ạo k
ết qu
ả
set.seed(123)
# S
ố lư
ợng dòng d
ữ li
ệu
n <- 100000
# T
ạo d
ữ li
ệu gi
ả l
ập
crime_data <- data.frame(
Crime_ID = 1:n,
Crime_Type = sample(c("Tr
ộm c
ắp", "B
ạo l
ực", "L
ừa đ
ảo", "Ma túy", "Gi
ết ngư
ời"),
n, replace = TRUE, prob = c(0.4, 0.25, 0.15, 0.15, 0.05)),
Location = sample(c("Hà N
ội", "TP.HCM", "Đà N
ẵng", "H
ải Phòng", "C
ần Thơ"), n, replace = TRUE),
Time = sample(0:23, n, replace = TRUE),
Month = sample(1:12, n, replace = TRUE),
Year = sample(2015:2025, n, replace = TRUE),
Age = sample(18:70, n, replace = TRUE),
Outcome = sample(c("B
ắt gi
ữ", "Chưa b
ắt", "Đang đi
ều tra"),
n, replace = TRUE, prob = c(0.5, 0.3, 0.2))
)
# Xu
ất d
ữ li
ệu ra file CSV
write.csv(crime_data, "crime_data.csv", row.names = FALSE)
# Ki
ểm tra m
ột s
ố dòng d
ữ li
ệu
head(crime_data)
# Thông báo hoàn thành
cat("File 'crime_data.csv' đã đư
ợc t
ạo thành công!\n")
# ---- V
Ẽ BI
ỂU Đ
Ồ ----
# 1. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo lo
ại
ggplot(crime_data, aes(x = Crime_Type, fill = Crime_Type)) +
geom_bar() +
theme_minimal() +
labs(title = "Phân b
ố các lo
ại t
ội ph
ạm", x = "Lo
ại t
ội ph
ạm", y = "S
ố v
ụ")
# 2. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo th
ời gian trong ngày
ggplot(crime_data, aes(x = Time)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Phân b
ố th
ời gian x
ảy ra t
ội ph
ạm", x = "Gi
ờ trong ngày", y = "S
ố v
ụ")
# 3. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo đ
ịa đi
ểm
ggplot(crime_data, aes(x = Location, fill = Crime_Type)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Phân b
ố t
ội ph
ạm theo đ
ịa đi
ểm", x = "Thành ph
ố", y = "S
ố v
ụ")
# T
ải thư vi
ện
library(tidyverse)
library(ggplot2)
# Đ
ặt seed đ
ể tái t
ạo k
ết qu
ả
set.seed(123)
# S
ố lư
ợng dòng d
ữ li
ệu
n <- 100000
# T
ạo d
ữ li
ệu gi
ả l
ập
crime_data <- data.frame(
Crime_ID = 1:n,
Crime_Type = sample(c("Tr
ộm c
ắp", "B
ạo l
ực", "L
ừa đ
ảo", "Ma túy", "Gi
ết ngư
ời"),
n, replace = TRUE, prob = c(0.4, 0.25, 0.15, 0.15, 0.05)),
Location = sample(c("Hà N
ội", "TP.HCM", "Đà N
ẵng", "H
ải Phòng", "C
ần Thơ"), n, replace = TRUE),
Time = sample(0:23, n, replace = TRUE),
Month = sample(1:12, n, replace = TRUE),
Year = sample(2015:2025, n, replace = TRUE),
Age = sample(18:70, n, replace = TRUE),
Outcome = sample(c("B
ắt gi
ữ", "Chưa b
ắt", "Đang đi
ều tra"),
n, replace = TRUE, prob = c(0.5, 0.3, 0.2))
)
# Xu
ất d
ữ li
ệu ra file CSV
write.csv(crime_data, "crime_data.csv", row.names = FALSE)
# Ki
ểm tra m
ột s
ố dòng d
ữ li
ệu
head(crime_data)
# Thông báo hoàn thành
cat("File 'crime_data.csv' đã đư
ợc t
ạo thành công!\n")
# ---- V
Ẽ BI
ỂU Đ
Ồ ----
# 1. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo lo
ại
ggplot(crime_data, aes(x = Crime_Type, fill = Crime_Type)) +
geom_bar() +
theme_minimal() +
labs(title = "Phân b
ố các lo
ại t
ội ph
ạm", x = "Lo
ại t
ội ph
ạm", y = "S
ố v
ụ")
# 2. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo th
ời gian trong ngày
ggplot(crime_data, aes(x = Time)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Phân b
ố th
ời gian x
ảy ra t
ội ph
ạm", x = "Gi
ờ trong ngày", y = "S
ố v
ụ")
# 3. Bi
ểu đ
ồ s
ố lư
ợng t
ội ph
ạm theo đ
ịa đi
ểm
ggplot(crime_data, aes(x = Location, fill = Crime_Type)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Phân b
ố t
ội ph
ạm theo đ
ịa đi
ểm", x = "Thành ph
ố", y = "S
ố v
ụ")
# 4. Bi
ểu đ
ồ phân b
ố tu
ổi c
ủa nghi ph
ạm
ggplot(crime_data, aes(x = Age)) +
geom_histogram(binwidth = 2, fill = "darkred", color = "black") +
theme_minimal() +
labs(title = "Phân b
ố đ
ộ tu
ổi c
ủa nghi ph
ạm", x = "Đ
ộ tu
ổi", y = "S
ố lư
ợng")
# 5. Bi
ểu đ
ồ k
ết qu
ả x
ử lý v
ụ án
ggplot(crime_data, aes(x = Outcome, fill = Outcome)) +
geom_bar() +
theme_minimal() +
labs(title = "K
ết qu
ả x
ử lý v
ụ án", x = "Tr
ạng thái", y = "S
ố v
ụ")
q()
